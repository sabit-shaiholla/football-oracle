name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-push-docker:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      - name: Build and Push Backend image
        run: |
          docker build -t sshaikholla/football-oracle-backend:latest -f backend/Dockerfile .
          docker push sshaikholla/football-oracle-backend:latest

      - name: Build and Push Frontend image
        run: |
          docker build -t sshaikholla/football-oracle-frontend:latest --build-args api_base_url=http://backend:8080 -f frontend/football-oracle-fe/Dockerfile .
          docker push sshaikholla/football-oracle-frontend:latest
      
  deploy:
    name: Deploy to AWS Beanstalk
    runs-on: ubuntu-latest
    needs: build-and-push-docker

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Deploy to AWS Elastic Beanstalk
        run: |
          zip -r deployment.zip *
          aws s3 cp deployment.zip s3://your-s3-bucket/deployment.zip
          aws elasticbeanstalk create-application-version --application-name your-app-name --version-label v1 --source-bundle S3Bucket="your-s3-bucket",S3Key="deployment.zip"
          aws elasticbeanstalk update-environment --environment-name your-env-name --version-label v1